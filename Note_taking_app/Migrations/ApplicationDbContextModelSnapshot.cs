// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using note_taking_app.Data;

#nullable disable

namespace note_taking_app.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("note_taking_app.Models.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdNote")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("NoteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NoteId");

                    b.ToTable("File");
                });

            modelBuilder.Entity("note_taking_app.Models.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Note");
                });

            modelBuilder.Entity("note_taking_app.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Due")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdNote")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("NoteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NoteId");

                    b.ToTable("Task");
                });

            modelBuilder.Entity("note_taking_app.Models.File", b =>
                {
                    b.HasOne("note_taking_app.Models.Note", null)
                        .WithMany("Files")
                        .HasForeignKey("NoteId");
                });

            modelBuilder.Entity("note_taking_app.Models.Task", b =>
                {
                    b.HasOne("note_taking_app.Models.Note", null)
                        .WithMany("Tasks")
                        .HasForeignKey("NoteId");
                });

            modelBuilder.Entity("note_taking_app.Models.Note", b =>
                {
                    b.Navigation("Files");

                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
